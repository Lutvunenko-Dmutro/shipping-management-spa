import React, { useState, useEffect } from 'react'; // useRef –≤–∂–µ –Ω–µ –ø–æ—Ç—Ä—ñ–±–µ–Ω
import './App.css'; 

import ContainerList from './components/ContainerList';
import AddContainerForm from './components/AddContainerForm';

const INITIAL_CONTAINERS = [
  { id: 'UA-123456', status: '–£ –¥–æ—Ä–æ–∑—ñ', location: '–ü–æ—Ä—Ç –û–¥–µ—Å–∞', destination: '–ü–æ—Ä—Ç –ì–∞–º–±—É—Ä–≥' },
  { id: 'UA-654321', status: '–î–æ—Å—Ç–∞–≤–ª–µ–Ω–æ', location: '–°–∫–ª–∞–¥ (–ö–∏—ó–≤)', destination: '–°–∫–ª–∞–¥ (–ö–∏—ó–≤)' },
  { id: 'UA-789012', status: '–û—á—ñ–∫—É—î', location: '–ü–æ—Ä—Ç –†–æ—Ç—Ç–µ—Ä–¥–∞–º', destination: '–°–∫–ª–∞–¥ (–õ—å–≤—ñ–≤)' }
];

function App() {
  const [containers, setContainers] = useState(INITIAL_CONTAINERS);
  const [activeTab, setActiveTab] = useState('dashboard'); 
  
  // --- –ó–ê–í–î–ê–ù–ù–Ø 3.1 (jQuery): –†–µ–∞–ª—ñ–∑–∞—Ü—ñ—è –ø–∞—Ä–∞–ª–∞–∫—Å-–µ—Ñ–µ–∫—Ç—É ---
  useEffect(() => {
    // –¶–µ–π –µ—Ñ–µ–∫—Ç —Å–ø—Ä–∞—Ü—é—î, –∫–æ–ª–∏ 'activeTab' –∑–º—ñ–Ω–∏—Ç—å—Å—è
    if (activeTab === 'dashboard' && window.$) { // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ jQuery –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ —ñ —á–∏ –º–∏ –Ω–∞ –ø–æ—Ç—Ä—ñ–±–Ω—ñ–π –≤–∫–ª–∞–¥—Ü—ñ
      const $window = window.$(window); 
      const $parallaxElement = window.$('.parallax-container'); 
      
      if ($parallaxElement.length) { 
        
        const handleScroll = () => { // –í–∏–Ω–æ—Å–∏–º–æ –æ–±—Ä–æ–±–Ω–∏–∫ –≤ –æ–∫—Ä–µ–º—É —Ñ—É–Ω–∫—Ü—ñ—é
          const scrolled = $window.scrollTop(); 
          // –ó–º—ñ–Ω—é—î–º–æ –ø–æ–∑–∏—Ü—ñ—é —Ñ–æ–Ω—É. –ü–æ–∑–∏—Ç–∏–≤–Ω–µ –∑–Ω–∞—á–µ–Ω–Ω—è (scrolled * 0.4)
          // –∑–º—É—Å–∏—Ç—å —Ñ–æ–Ω —Ä—É—Ö–∞—Ç–∏—Å—è –í–ù–ò–ó, –∞–ª–µ –ø–æ–≤—ñ–ª—å–Ω—ñ—à–µ –∑–∞ —Å–∫—Ä–æ–ª. –¶–µ –≤–∏–≥–ª—è–¥–∞—î –∫—Ä–∞—â–µ.
          $parallaxElement.css('background-position', 'center ' + (scrolled * 0.4) + 'px');
        };

        // –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫
        $window.on('scroll.parallax', handleScroll);
        
        // –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ —Ñ—É–Ω–∫—Ü—ñ—é "–æ—á–∏—â–µ–Ω–Ω—è".
        // –í–æ–Ω–∞ —Å–ø—Ä–∞—Ü—é—î, –∫–æ–ª–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –∑–Ω–∏–∫–Ω–µ (–Ω–∞–ø—Ä., –ø—Ä–∏ –ø–µ—Ä–µ—Ö–æ–¥—ñ –Ω–∞ —ñ–Ω—à—É –≤–∫–ª–∞–¥–∫—É).
        return () => {
          $window.off('scroll.parallax'); // –í–∏–¥–∞–ª—è—î–º–æ *—Å–∞–º–µ —Ü–µ–π* –æ–±—Ä–æ–±–Ω–∏–∫
        };
      }
    }
  }, [activeTab]); // –ó–∞–ø—É—Å–∫–∞—î–º–æ –µ—Ñ–µ–∫—Ç, –∫–æ–ª–∏ –∑–º—ñ–Ω—é—î—Ç—å—Å—è –≤–∫–ª–∞–¥–∫–∞


  const addContainer = (newContainerData) => {
    const newContainer = { ...newContainerData, status: '–û—á—ñ–∫—É—î' };
    setContainers( (prevContainers) => [...prevContainers, newContainer] );
    setActiveTab('dashboard');
  };

  const deleteContainer = (idToDelete) => {
    setContainers( (prevContainers) =>
      prevContainers.filter(container => container.id !== idToDelete)
    );
  };
  
  const updateContainerStatus = (idToUpdate, newStatus) => {
    setContainers( (prevContainers) =>
      prevContainers.map(container =>
        (container.id === idToUpdate)
          ? { ...container, status: newStatus }
          : container 
      )
    );
  };

  const stats = {

    total: containers.length,
    transit: containers.filter(c => c.status === '–£ –¥–æ—Ä–æ–∑—ñ').length,
    delivered: containers.filter(c => c.status === '–î–æ—Å—Ç–∞–≤–ª–µ–Ω–æ').length,
    pending: containers.filter(c => c.status === '–û—á—ñ–∫—É—î').length,
  };

  const handleNavClick = (tabName) => {

    setActiveTab(tabName);
  };

  return (
    <div className="App"> 
      <header className="header">

        <h1>üö¢ –°–∏—Å—Ç–µ–º–∞ —É–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è –ø–µ—Ä–µ–≤–µ–∑–µ–Ω–Ω—è–º–∏ (React SPA)</h1>
      </header>

      <nav className="navigation">
        <ul>
          <li>

            <a 
              href="#!" 
              onClick={() => handleNavClick('dashboard')} 
              className={activeTab === 'dashboard' ? 'active' : ''}
            >
              –ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è
            </a>
          </li>
          <li>
            <a 

              href="#!" 
              onClick={() => handleNavClick('add')}
              className={activeTab === 'add' ? 'active' : ''}
            >
              –î–æ–¥–∞—Ç–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
            </a>
          </li>
          <li>
            <a 

              href="#!" 
              onClick={() => handleNavClick('reports')}
              className={activeTab === 'reports' ? 'active' : ''}
            >
              –ó–≤—ñ—Ç–∏
            </a>
          </li>
        </ul>
      </nav>

      <main className="container">
        
        {activeTab === 'dashboard' && (
          // --- –ó–ê–í–î–ê–ù–ù–Ø 3.1: –î–æ–¥–∞—î–º–æ –ø–∞—Ä–∞–ª–∞–∫—Å-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä ---
          <section id="dashboard-section" style={{ gridColumn: '1 / -1' }}> 
            
            {/* –¶–µ –±—É–¥–µ –Ω–∞—à –ø–∞—Ä–∞–ª–∞–∫—Å-–µ–ª–µ–º–µ–Ω—Ç */}
            <div 
              className="parallax-container" 
              style={{ backgroundImage: `url('/containers.jpg')` }} // –®–ª—è—Ö –¥–æ –≤–∞—à–æ—ó –ª–æ–∫–∞–ª—å–Ω–æ—ó —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ—ñ—ó
            >
              <div className="parallax-content">
                <h2>–ê–∫—Ç–∏–≤–Ω—ñ –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä–∏ & –ú–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥</h2>
                <p>–ï—Ñ–µ–∫—Ç–∏–≤–Ω–µ —É–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è –≤–∞—à–∏–º–∏ –ø–µ—Ä–µ–≤–µ–∑–µ–Ω–Ω—è–º–∏ –≤ —Ä–µ–∞–ª—å–Ω–æ–º—É —á–∞—Å—ñ.</p>
              </div>
            </div>

            {/* –¢–µ–ø–µ—Ä —Ç–∞–±–ª–∏—Ü—è –∑ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞–º–∏ –±—É–¥–µ –π—Ç–∏ –Ω–∏–∂—á–µ */}
            <div className="dashboard-section" style={{ marginTop: '2rem' }}>
              <h2>–°–ø–∏—Å–æ–∫ –∞–∫—Ç–∏–≤–Ω–∏—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ñ–≤</h2>
              <ContainerList
                containers={containers}
                onDelete={deleteContainer}
                onUpdate={updateContainerStatus}
              />
            </div>
          </section>
        )}

        {activeTab === 'add' && (
          <section id="add-section" className="form-section" style={{ gridColumn: '1 / -1' }}> 
            <h2>–î–æ–¥–∞—Ç–∏ –Ω–æ–≤–∏–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä</h2>
            <AddContainerForm onAdd={addContainer} />
          </section>
        )}

        {activeTab === 'reports' && (
          <section id="reports-section" className="dashboard-section" style={{ gridColumn: '1 / -1' }}>
            <h2>–ó–≤—ñ—Ç–∏: –ü–æ—Ç–æ—á–Ω–∏–π —Å—Ç–∞–Ω</h2>
            <p>–¶—è —Å—Ç–æ—Ä—ñ–Ω–∫–∞ –ø–æ–∫–∞–∑—É—î –ø—Ä–æ—Å—Ç—É –∞–Ω–∞–ª—ñ—Ç–∏–∫—É –Ω–∞ –æ—Å–Ω–æ–≤—ñ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Å–ø–∏—Å–∫—É –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ñ–≤...</p>
            
            <ul style={{ fontSize: '1.2rem', lineHeight: '1.8' }}>

              <li><strong>–ó–∞–≥–∞–ª—å–Ω–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ñ–≤:</strong> {stats.total}</li>
              <li><strong>–ö—ñ–ª—å–∫—ñ—Å—Ç—å —É –¥–æ—Ä–æ–∑—ñ:</strong> {stats.transit}</li>
              <li><strong>–ö—ñ–ª—å–∫—ñ—Å—Ç—å –¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—Ö:</strong> {stats.delivered}</li>
              <li><strong>–ö—ñ–ª—å–∫—ñ—Å—Ç—å –≤ –æ—á—ñ–∫—É–≤–∞–Ω–Ω—ñ:</strong> {stats.pending}</li>
            </ul>
          </section>
        )}
      </main>

      <footer className="footer">

        <p>&copy; 2025 –ú–æ–¥—É–ª—å–Ω–∞ —Ä–æ–±–æ—Ç–∞, {useName ? useName : '–î–º–∏—Ç—Ä–æ'}. React SPA.</p>
      </footer>
    </div>
  );
}

const useName = "–õ–∏—Ç–≤–∏–Ω–µ–Ω–∫–æ –î–º–∏—Ç—Ä–æ"; 

export default App;

